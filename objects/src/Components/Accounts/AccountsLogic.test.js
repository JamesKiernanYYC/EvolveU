import Accounts from './AccountsLogic'

// test('is the array real', () => {
//     const yes = new Accounts()
//     const isObject = typeof yes
//     console.log(isObject)
//     expect(isObject).toBe('object')
// })

// test('add and remove an account to/from the array', () => {
//     const Acc1 = new Account('bob', 10)
//     const Acc2 = new Account('jim', 12)
//     console.log(Acc1)
//     const yes = new Accounts()
//     console.log(yes)
//     yes.addAccount(Acc1)
//     console.log(yes)
//     expect(yes.accountsArray[0].name).toBe('bob')
//     yes.addAccount(Acc2)
//     console.log(yes)
//     yes.removeAccount(Acc1)
//     expect(yes.accountsArray[0].name).toBe('jim')

// })
test('get the total of all accounts', () => {
    const Acc1 = new Account('bob', 10)
    const Acc2 = new Account('jim', 12)
    const Acc3 = new Account('b', 10)
    const Acc4 = new Account('a', 14)
    const newObjects = new Accounts()
    newObjects.addAccount(Acc1)
    newObjects.addAccount(Acc2)
    newObjects.addAccount(Acc3)
    newObjects.addAccount(Acc4)
    console.log(newObjects)
    //totalOfAccounts(newObjects)
    expect(newObjects.totalOfAccounts()).toBe(46)
})
test('get the largest ballance of the accounts', () => {
    const Acc1 = new Account('bob', 10)
    const Acc2 = new Account('jim', 12)
    const Acc3 = new Account('b', 10)
    const Acc4 = new Account('a', 14)
    const newObjects = new Accounts()
    newObjects.addAccount(Acc1)
    newObjects.addAccount(Acc2)
    newObjects.addAccount(Acc3)
    newObjects.addAccount(Acc4)
    console.log(newObjects)
    console.log(newObjects.findHighest())
    expect(newObjects.findHighest()).toBe(14)

})
test('get the smallest ballance of the accounts', () => {
    const Acc1 = new Account('bob', 11)
    const Acc2 = new Account('jim', 12)
    const Acc3 = new Account('b', 10)
    const Acc4 = new Account('a', 14)
    const newObjects = new Accounts()
    newObjects.addAccount(Acc1)
    newObjects.addAccount(Acc2)
    newObjects.addAccount(Acc3)
    newObjects.addAccount(Acc4)
    console.log(newObjects)
    console.log(newObjects.findLowest())
    expect(newObjects.findLowest()).toBe(10) 
})